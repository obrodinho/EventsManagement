-- MySQL Script generated by MySQL Workbench
-- 12/30/14 11:31:21
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema events_management
-- -----------------------------------------------------
-- Schema for SPL of Events Management
DROP SCHEMA IF EXISTS `events_management` ;

-- -----------------------------------------------------
-- Schema events_management
--
-- Schema for SPL of Events Management
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `events_management` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `events_management` ;

-- -----------------------------------------------------
-- Table `events_management`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`users` ;

CREATE TABLE IF NOT EXISTS `events_management`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(64) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `firstname` VARCHAR(128) NOT NULL,
  `lastname` VARCHAR(256) NOT NULL,
  `deleted` TINYINT(1) NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB
COMMENT = 'Table to hold all users of the system. Must be partitioned.';


-- -----------------------------------------------------
-- Table `events_management`.`system_configs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`system_configs` ;

CREATE TABLE IF NOT EXISTS `events_management`.`system_configs` (
  `config_id` INT NOT NULL AUTO_INCREMENT,
  `config_key` VARCHAR(64) NOT NULL,
  `config_value` TEXT NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`config_id`))
ENGINE = InnoDB
COMMENT = 'Table to hold all system options\noption_value must be dealed when saved or retrieved.\nA system function may deal the serialization of option values.';


-- -----------------------------------------------------
-- Table `events_management`.`system_profiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`system_profiles` ;

CREATE TABLE IF NOT EXISTS `events_management`.`system_profiles` (
  `profile_id` INT NOT NULL AUTO_INCREMENT,
  `shortname` VARCHAR(64) NULL,
  `description` VARCHAR(128) NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`profile_id`),
  UNIQUE INDEX `shortname_UNIQUE` (`shortname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`user_meta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`user_meta` ;

CREATE TABLE IF NOT EXISTS `events_management`.`user_meta` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `meta_key` VARCHAR(64) NOT NULL,
  `meta_value` TEXT NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_user_meta_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `events_management`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Table to hold metainfo of users';


-- -----------------------------------------------------
-- Table `events_management`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`events` ;

CREATE TABLE IF NOT EXISTS `events_management`.`events` (
  `event_id` INT(11) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NOT NULL,
  `description` VARCHAR(128) NOT NULL,
  `start` DATETIME NOT NULL,
  `end` DATETIME NOT NULL,
  `owner` INT(11) NOT NULL,
  `deleted` TINYINT(1) NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`event_id`),
  INDEX `fk_events_owner_idx` (`owner` ASC),
  CONSTRAINT `fk_events_owner`
    FOREIGN KEY (`owner`)
    REFERENCES `events_management`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`event_meta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`event_meta` ;

CREATE TABLE IF NOT EXISTS `events_management`.`event_meta` (
  `event_id` INT NOT NULL AUTO_INCREMENT,
  `meta_key` VARCHAR(64) NULL,
  `meta_value` TEXT NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`event_id`),
  CONSTRAINT `fk_event_meta_event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `events_management`.`events` (`event_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`activity_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`activity_types` ;

CREATE TABLE IF NOT EXISTS `events_management`.`activity_types` (
  `activity_type_id` INT(11) NOT NULL AUTO_INCREMENT,
  `shortname` VARCHAR(64) NOT NULL,
  `title` VARCHAR(64) NOT NULL,
  `description` VARCHAR(128) NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`activity_type_id`),
  UNIQUE INDEX `shortname_UNIQUE` (`shortname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`activities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`activities` ;

CREATE TABLE IF NOT EXISTS `events_management`.`activities` (
  `activity_id` INT(11) NOT NULL AUTO_INCREMENT,
  `event_id` INT(11) NOT NULL,
  `title` VARCHAR(128) NOT NULL,
  `description` VARCHAR(128) NOT NULL,
  `type` INT(11) NOT NULL,
  `workload` INT(11) NULL COMMENT 'hours',
  `start` DATETIME NULL,
  `end` DATETIME NULL,
  `created` DATETIME NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`activity_id`),
  INDEX `fk_activities_event_id_idx` (`event_id` ASC),
  INDEX `fk_activities_type_idx` (`type` ASC),
  CONSTRAINT `fk_activities_event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `events_management`.`events` (`event_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activities_type`
    FOREIGN KEY (`type`)
    REFERENCES `events_management`.`activity_types` (`activity_type_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`classes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`classes` ;

CREATE TABLE IF NOT EXISTS `events_management`.`classes` (
  `class_id` INT(11) NOT NULL AUTO_INCREMENT,
  `activity_id` INT(11) NOT NULL,
  `title` VARCHAR(128) NOT NULL,
  `description` VARCHAR(128) NOT NULL,
  `standard` TINYINT(1) NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`class_id`),
  INDEX `fk_classes_activity_idx` (`activity_id` ASC),
  CONSTRAINT `fk_classes_activity`
    FOREIGN KEY (`activity_id`)
    REFERENCES `events_management`.`activities` (`activity_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`user_system_profiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`user_system_profiles` ;

CREATE TABLE IF NOT EXISTS `events_management`.`user_system_profiles` (
  `user_id` INT(11) NOT NULL,
  `profile_id` INT(11) NOT NULL,
  `associated` DATETIME NOT NULL,
  PRIMARY KEY (`user_id`, `profile_id`),
  INDEX `fk_user_system_profiles_profile_id_idx` (`profile_id` ASC),
  CONSTRAINT `fk_user_system_profiles_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `events_management`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_system_profiles_profile_id`
    FOREIGN KEY (`profile_id`)
    REFERENCES `events_management`.`system_profiles` (`profile_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`event_profiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`event_profiles` ;

CREATE TABLE IF NOT EXISTS `events_management`.`event_profiles` (
  `profile_id` INT NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `description` VARCHAR(128) NULL,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL,
  PRIMARY KEY (`profile_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`events_subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`events_subscription` ;

CREATE TABLE IF NOT EXISTS `events_management`.`events_subscription` (
  `event_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `profile_id` INT(11) NOT NULL,
  `associated` DATETIME NOT NULL,
  PRIMARY KEY (`event_id`, `user_id`, `profile_id`),
  INDEX `fk_events_subscription_user_id_idx` (`user_id` ASC),
  INDEX `fk_events_subscription_profile_id_idx` (`profile_id` ASC),
  CONSTRAINT `fk_events_subscription_event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `events_management`.`events` (`event_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_events_subscription_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `events_management`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_events_subscription_profile_id`
    FOREIGN KEY (`profile_id`)
    REFERENCES `events_management`.`event_profiles` (`profile_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'User registration table';


-- -----------------------------------------------------
-- Table `events_management`.`classes_profiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`classes_profiles` ;

CREATE TABLE IF NOT EXISTS `events_management`.`classes_profiles` (
  `profile_id` INT(11) NOT NULL AUTO_INCREMENT,
  `shortname` VARCHAR(64) NOT NULL,
  `description` VARCHAR(128) NULL,
  `created` DATETIME NOT NULL,
  `updated` VARCHAR(45) NULL,
  PRIMARY KEY (`profile_id`),
  UNIQUE INDEX `shortname_UNIQUE` (`shortname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `events_management`.`classes_subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events_management`.`classes_subscription` ;

CREATE TABLE IF NOT EXISTS `events_management`.`classes_subscription` (
  `class_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `profile_id` INT(11) NOT NULL,
  `associated` DATETIME NOT NULL,
  PRIMARY KEY (`class_id`, `user_id`, `profile_id`),
  INDEX `fk_class_subscription_user_id_idx` (`user_id` ASC),
  INDEX `fk_class_subscription_profile_id_idx` (`profile_id` ASC),
  CONSTRAINT `fk_class_subscription_class_id`
    FOREIGN KEY (`class_id`)
    REFERENCES `events_management`.`classes` (`class_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_class_subscription_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `events_management`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_class_subscription_profile_id`
    FOREIGN KEY (`profile_id`)
    REFERENCES `events_management`.`classes_profiles` (`profile_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
